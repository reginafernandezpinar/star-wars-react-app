{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/usuario/Desktop/Regina/star-wars-react-app/pages/character/[id].js\";\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { fetchCharacterDetail, fetchCharacterFilms } from \"../../tools/api\";\nimport Layout from \"../../components/layout\";\nimport CharacterFilms from \"../../components/character/films\";\nimport CharacterCard from \"../../components/character/card\";\nimport styles from \"./character.module.scss\";\n\nconst Character = () => {\n  const {\n    0: characterData,\n    1: setCharacterData\n  } = useState(null);\n  const {\n    0: characterFilms,\n    1: setCharacterFilms\n  } = useState([]);\n  const {\n    query: {\n      id\n    }\n  } = useRouter();\n\n  const getYearsFromNow = value => {\n    const date = new Date(value);\n    const now = new Date();\n    const result = now.getFullYear() - date.getFullYear();\n    return result;\n  };\n\n  useEffect(() => {\n    fetchCharacterDetail(id).then(({\n      data\n    }) => {\n      var _data$films;\n\n      setCharacterData(data); // Create array of promises with requests for each film\n\n      const promiseArray = (_data$films = data.films) === null || _data$films === void 0 ? void 0 : _data$films.map(filmUrl => fetchCharacterFilms(filmUrl)); // Execute all promises and handle resulting array\n\n      Promise.all(promiseArray).then(films => {\n        setCharacterFilms(films.map(({\n          data: {\n            title,\n            release_date\n          }\n        }) => ({\n          title,\n          yearsSinceRelease: getYearsFromNow(release_date)\n        })));\n      });\n    }).catch(error => {\n      console.log(\"error\", error);\n    });\n  }, []);\n  const characterDetails = [{\n    label: \"Height\",\n    value: characterData === null || characterData === void 0 ? void 0 : characterData.height\n  }, {\n    label: \"Mass\",\n    value: characterData === null || characterData === void 0 ? void 0 : characterData.mass\n  }, {\n    label: \"Hair color\",\n    value: characterData === null || characterData === void 0 ? void 0 : characterData.hair_color\n  }, {\n    label: \"Skin color\",\n    value: characterData === null || characterData === void 0 ? void 0 : characterData.skin_color\n  }, {\n    label: \"Eye color\",\n    value: characterData === null || characterData === void 0 ? void 0 : characterData.eye_color\n  }, {\n    label: \"Gender\",\n    value: characterData === null || characterData === void 0 ? void 0 : characterData.gender\n  }, {\n    label: \"Birth year\",\n    value: characterData === null || characterData === void 0 ? void 0 : characterData.birth_year\n  }];\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u2190 Back to main list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: characterData === null || characterData === void 0 ? void 0 : characterData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CharacterCard, {\n          characterDetails: characterDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CharacterFilms, {\n          films: characterFilms\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Character;","map":{"version":3,"sources":["/Users/usuario/Desktop/Regina/star-wars-react-app/pages/character/[id].js"],"names":["useEffect","useState","useRouter","Link","fetchCharacterDetail","fetchCharacterFilms","Layout","CharacterFilms","CharacterCard","styles","Character","characterData","setCharacterData","characterFilms","setCharacterFilms","query","id","getYearsFromNow","value","date","Date","now","result","getFullYear","then","data","promiseArray","films","map","filmUrl","Promise","all","title","release_date","yearsSinceRelease","catch","error","console","log","characterDetails","label","height","mass","hair_color","skin_color","eye_color","gender","birth_year","container","name"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\n\nimport { fetchCharacterDetail, fetchCharacterFilms } from \"../../tools/api\";\nimport Layout from \"../../components/layout\";\nimport CharacterFilms from \"../../components/character/films\";\nimport CharacterCard from \"../../components/character/card\";\n\nimport styles from \"./character.module.scss\";\n\nconst Character = () => {\n  const [characterData, setCharacterData] = useState(null);\n  const [characterFilms, setCharacterFilms] = useState([]);\n  const { query: { id } } = useRouter();\n\n  const getYearsFromNow = value => {\n    const date = new Date(value);\n    const now = new Date();\n    const result = now.getFullYear() - date.getFullYear();\n    return result;\n  };\n\n  useEffect(() => {\n    fetchCharacterDetail(id)\n      .then(({ data }) => {\n        setCharacterData(data);\n        // Create array of promises with requests for each film\n        const promiseArray = data.films?.map(filmUrl =>\n          fetchCharacterFilms(filmUrl)\n        );\n\n        // Execute all promises and handle resulting array\n        Promise.all(promiseArray).then(films => {\n          setCharacterFilms(\n            films.map(({ data: { title, release_date } }) => ({\n              title,\n              yearsSinceRelease: getYearsFromNow(release_date),\n            }))\n          );\n        });\n      })\n      .catch(error => {\n        console.log(\"error\", error);\n      });\n  }, []);\n\n  const characterDetails = [\n    {\n      label: \"Height\",\n      value: characterData?.height,\n    },\n    {\n      label: \"Mass\",\n      value: characterData?.mass,\n    },\n    {\n      label: \"Hair color\",\n      value: characterData?.hair_color,\n    },\n    {\n      label: \"Skin color\",\n      value: characterData?.skin_color,\n    },\n    {\n      label: \"Eye color\",\n      value: characterData?.eye_color,\n    },\n    {\n      label: \"Gender\",\n      value: characterData?.gender,\n    },\n    {\n      label: \"Birth year\",\n      value: characterData?.birth_year,\n    },\n  ];\n\n  return (\n    <Layout>\n      <h2>\n        <Link href=\"/\">\n          <a>\n            <h3>&larr; Back to main list</h3>\n          </a>\n        </Link>\n      </h2>\n      <div className={styles.container}>\n        <h1>{characterData?.name}</h1>\n        <div>\n          <CharacterCard characterDetails={characterDetails} />\n          <CharacterFilms films={characterFilms} />\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Character;\n"]},"metadata":{},"sourceType":"module"}